---
import "../styles/global.css";
import "../styles/theme.css";
import BaseLayout from "../layouts/BaseLayout.astro";
import { sponsors, tierDescriptions } from "../lib/sponsors.ts";

// Define tiers in order (must match sponsor.tier.toLowerCase())
const tiers: Array<keyof typeof tierDescriptions> = [
  "platinum",
  "gold",
  "silver",
  "bronze",
  "honorable"
];
---
<BaseLayout>
  <!-- HERO -->
  <section class="hero" style="--hero-img: url('/images/sponsors-hero.JPG')">
    <div class="hero-content">
      <h1 class="hero-title">Our Sponsors</h1>
      <p class="hero-sub">Thank You for Fueling Our Journey</p>
    </div>
  </section>

  <!-- SPONSORS -->
  <section id="sponsors" class="sponsors">
    <h3 style="text-align:left; font-size:3rem; margin-bottom:1.5rem;">Our Sponsors</h3>
    {tiers.map(tier => {
      const tierSponsors = sponsors.filter(s => s.tier.toLowerCase() === tier);
      if (tierSponsors.length === 0) return null;
      return (
        <div class={"sponsor-tier " + tier} style="text-align:left; margin-bottom:3rem;">
          <h4 style="text-align:left; font-size:3rem; margin-bottom:0.5rem;">
            {tier.charAt(0).toUpperCase() + tier.slice(1)}
          </h4>
          <p class="tier-desc" style="text-align:left; font-size:1.2rem; margin-bottom:1.5rem;">
            {tierDescriptions[tier]}
          </p>
          <div class={tier === 'honorable' ? 'sponsor-grid honorable-grid' : 'sponsor-grid'}>
            {tierSponsors.map(sponsor => (
              <div class="logo-box reveal">
                {sponsor.url ? (
                  <a href={sponsor.url} target="_blank" rel="noopener">
                    <img src={sponsor.image} alt={sponsor.alt} />
                  </a>
                ) : (
                  <img src={sponsor.image} alt={sponsor.alt} />
                )}
                {sponsor.personName && <p class="sponsor-name" style="text-align:left; margin-top:0.75rem; font-size:1rem;">
                  {sponsor.personName}
                </p>}
              </div>
            ))}
          </div>
        </div>
      );
    })}
  </section>

  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const boxes = document.querySelectorAll('.logo-box');
      const io = new IntersectionObserver((entries) => {
        entries.forEach(e => {
          if (e.isIntersecting) {
            e.target.classList.add('reveal');
            io.unobserve(e.target);
          }
        });
      }, { threshold: 0.3 });
      boxes.forEach(b => io.observe(b));
    });
  </script>
</BaseLayout>
